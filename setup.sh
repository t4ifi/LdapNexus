#!/bin/bash

# LdapNexus - Script de Inicializaci√≥n
# Este script configura y ejecuta LdapNexus por primera vez

set -e

echo "üåê LdapNexus - Inicializaci√≥n"
echo "================================"
echo ""

# Colores para output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Verificar Docker
echo -e "${BLUE}üì¶ Verificando Docker...${NC}"
if ! command -v docker &> /dev/null; then
    echo -e "${RED}‚ùå Docker no est√° instalado. Por favor instala Docker primero.${NC}"
    echo "   Visita: https://docs.docker.com/get-docker/"
    exit 1
fi
echo -e "${GREEN}‚úÖ Docker encontrado: $(docker --version)${NC}"

# Verificar Docker Compose
echo -e "${BLUE}üì¶ Verificando Docker Compose...${NC}"
if ! command -v docker-compose &> /dev/null && ! docker compose version &> /dev/null; then
    echo -e "${RED}‚ùå Docker Compose no est√° instalado.${NC}"
    exit 1
fi
echo -e "${GREEN}‚úÖ Docker Compose encontrado${NC}"

# Crear directorios necesarios
echo -e "${BLUE}üìÅ Creando directorios...${NC}"
mkdir -p data/ldap_data
mkdir -p data/ldap_config
mkdir -p config/certs
mkdir -p ldap-admin-web/logs

# Dar permisos apropiados
chmod 755 data/ldap_data
chmod 755 data/ldap_config

echo -e "${GREEN}‚úÖ Directorios creados${NC}"

# Verificar si hay contenedores corriendo
echo -e "${BLUE}üîç Verificando contenedores existentes...${NC}"
if docker ps -a | grep -q ldap-nexus || docker ps -a | grep -q ldap-server; then
    echo -e "${YELLOW}‚ö†Ô∏è  Contenedores existentes encontrados.${NC}"
    read -p "¬øDeseas eliminarlos y empezar de cero? (y/n) " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        echo -e "${BLUE}üóëÔ∏è  Eliminando contenedores anteriores...${NC}"
        docker compose down -v
        echo -e "${GREEN}‚úÖ Contenedores eliminados${NC}"
    fi
fi

# Construir im√°genes
echo -e "${BLUE}üî® Construyendo im√°genes Docker...${NC}"
docker compose build

# Iniciar servicios
echo -e "${BLUE}üöÄ Iniciando servicios...${NC}"
docker compose up -d

# Esperar a que los servicios est√©n listos
echo -e "${BLUE}‚è≥ Esperando a que los servicios est√©n listos...${NC}"
sleep 10

# Verificar estado
echo -e "${BLUE}üîç Verificando estado de servicios...${NC}"
docker compose ps

# Verificar salud de la aplicaci√≥n
echo ""
echo -e "${BLUE}üè• Verificando salud de la aplicaci√≥n...${NC}"
for i in {1..30}; do
    if curl -f http://localhost:3000/health > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Aplicaci√≥n est√° funcionando correctamente!${NC}"
        break
    fi
    if [ $i -eq 30 ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  La aplicaci√≥n est√° tardando en iniciar. Verifica los logs:${NC}"
        echo "   docker-compose logs -f ldap-admin-web"
    else
        echo -n "."
        sleep 2
    fi
done

# Mostrar informaci√≥n de acceso
echo ""
echo -e "${GREEN}================================${NC}"
echo -e "${GREEN}‚úÖ ¬°LdapNexus est√° listo!${NC}"
echo -e "${GREEN}================================${NC}"
echo ""
echo -e "${BLUE}üìç Acceso:${NC}"
echo "   URL: http://localhost:3000"
echo ""
echo -e "${BLUE}üîë Credenciales por defecto:${NC}"
echo "   Usuario: admin"
echo "   Contrase√±a: admin123"
echo ""
echo -e "${YELLOW}‚ö†Ô∏è  IMPORTANTE:${NC}"
echo "   Cambia las credenciales por defecto en producci√≥n!"
echo ""
echo -e "${BLUE}üìö Comandos √∫tiles:${NC}"
echo "   Ver logs:        docker-compose logs -f"
echo "   Detener:         docker-compose stop"
echo "   Reiniciar:       docker-compose restart"
echo "   Eliminar todo:   docker-compose down -v"
echo ""
echo -e "${GREEN}üéâ ¬°Disfruta usando LdapNexus!${NC}"
echo ""
